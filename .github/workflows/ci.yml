name: "Build ðŸ”¨"

on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches: [ main ]

jobs:
  build:
    name: "Build ðŸ”¨"
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        scheme:
          - "Swiftfin"

    runs-on: macos-15

    env:
      XCODE_VERSION: "16.4"
      IOS_VERSION: "16.4"
      IPHONE_SIMULATOR: "iPhone 13 Pro"

    steps:    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SwiftGen
        run: brew install swiftgen

      - name: Cache Carthage
        uses: actions/cache@v4
        id: carthage-cache
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
          restore-keys: ${{ runner.os }}-carthage-

      - name: Update Carthage
        run: carthage update --use-xcframeworks --cache-builds

      # FIXME: caches would keep failed compiles?

      # - name: Cache Swift packages
      #   uses: actions/cache@v4
      #   with:
      #     path: PackageCache
      #     key: ${{ runner.os }}-${{ matrix.scheme }}-spm-${{ hashFiles('**/Package.resolved') }}
      #     restore-keys: ${{ runner.os }}-${{ matrix.scheme }}-spm-

      - name: Build
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 60
          command: sudo fastlane buildLane \
            scheme:"\"${{ matrix.scheme }}\"" \
            xcodeVersion:${{ env.XCODE_VERSION }}

      - name: Pass package name
        id: package_name
        run: |
          echo "package=$(ls -t main/packages | head -n1)" >> "$GITHUB_OUTPUT"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package_name.outputs.package }}
          path: ${{ github.workspace }}/main/packages/${{ steps.package_name.outputs.package }}
          if-no-files-found: error

      - name: Create Draft Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.5
          name: v1.5
          files: main/packages/${{ steps.package_name.outputs.package }}
          draft: true
